/*
  Similar to Class "Shadow" as it also contains box-shadow, however this also makes the background color slightly lighter
*/

$elevationTypes : (
  '1'   : ('box-shadow':(0px 2px 1px -1px   ,0px 1px 1px 0px   ,0px 1px 3px 0px)  ,'background-image': (0.05) )
  ,'2'  : ('box-shadow':(0px 3px 1px -2px   ,0px 2px 2px 0px   ,0px 1px 5px 0px)  ,'background-image': (0.07) )
  ,'3'  : ('box-shadow':(0px 3px 3px -2px   ,0px 3px 4px 0px   ,0px 1px 8px 0px)  ,'background-image': (0.08) )
  ,'4'  : ('box-shadow':(0px 2px 4px -1px   ,0px 4px 5px 0px   ,0px 1px 10px 0px) ,'background-image': (0.09) )
  ,'5'  : ('box-shadow':(0px 3px 5px -1px   ,0px 6px 10px 0px  ,0px 1px 18px 0px) ,'background-image': (0.11) )
  ,'6'  : ('box-shadow':(0px 5px 5px -3px   ,0px 8px 10px 1px  ,0px 3px 14px 2px) ,'background-image': (0.12) )
  ,'7'  : ('box-shadow':(0px 7px 8px -4px   ,0px 12px 17px 2px ,0px 5px 22px 4px) ,'background-image': (0.14) )
  ,'8'  : ('box-shadow':(0px 8px 10px -5px  ,0px 16px 24px 2px ,0px 6px 30px 5px) ,'background-image': (0.15) )
  ,'9'  : ('box-shadow':(0px 11px 15px -7px ,0px 24px 38px 3px ,0px 9px 46px 8px) ,'background-image': (0.16) )
);


@mixin elevation-structure($value, $keyShadowTypes, $valueShadowTypes){
  $valueShadowTypes_BoxShadow       : map-get($valueShadowTypes, 'box-shadow');
  $valueShadowTypes_BackgroundImage : map-get($valueShadowTypes, 'background-image');

  @if(varIs($value, 'map') and ( map-has-key($value, 'light') and map-has-key($value, 'dark') )){ 
    $valueLight : map-get($value, 'light');
    $valueDark  : map-get($value, 'dark');

    @include light-theme{ 
      box-shadow: rgba($valueLight, 0.20) list.nth($valueShadowTypes_BoxShadow, 1), 
                  rgba($valueLight, 0.14) list.nth($valueShadowTypes_BoxShadow, 2), 
                  rgba($valueLight, 0.12) list.nth($valueShadowTypes_BoxShadow, 3);

      background-image: linear-gradient(rgba($valueLight, $valueShadowTypes_BackgroundImage), 
                                        rgba($valueLight, $valueShadowTypes_BackgroundImage));
    }
    @include dark-theme { 
      box-shadow: rgba($valueDark, 0.20) list.nth($valueShadowTypes_BoxShadow, 1), 
                  rgba($valueDark, 0.14) list.nth($valueShadowTypes_BoxShadow, 2),
                  rgba($valueDark, 0.12) list.nth($valueShadowTypes_BoxShadow, 3);

      background-image: linear-gradient(rgba($valueDark, $valueShadowTypes_BackgroundImage), 
                                        rgba($valueDark, $valueShadowTypes_BackgroundImage));
    }
  }
  @else{
      box-shadow: rgba($value, 0.20) list.nth($valueShadowTypes_BoxShadow, 1), 
                  rgba($value, 0.14) list.nth($valueShadowTypes_BoxShadow, 2), 
                  rgba($value, 0.12) list.nth($valueShadowTypes_BoxShadow, 3);

      background-image: linear-gradient(rgba($value, $valueShadowTypes_BackgroundImage), 
                                        rgba($value, $valueShadowTypes_BackgroundImage));
  }
}


@mixin auto-elevation-class-generator( $key, $value, $classPrefix: '', $classSuffix: ''){
  @each $keyShadowTypes, $valueShadowTypes in $elevationTypes{

    .#{str-replace($classPrefix, ':')}elevation-#{$keyShadowTypes}-#{$key}#{$classSuffix}{
      // Default
      @if ($classPrefix == ''){
        @include elevation-structure($value, $keyShadowTypes, $valueShadowTypes)
      }

      // Tag Selectors
      @if ( string.slice($classPrefix, 1, 1)==':' ) {
        &:#{string.slice($classPrefix, 2, (string.length($classPrefix) - 1))} {
          @include elevation-structure($value, $keyShadowTypes, $valueShadowTypes)
        }
      }
    }

  }
}
  
@each $key, $value in $auto-class-generator-merge{ @include auto-elevation-class-generator($key, $value); }
