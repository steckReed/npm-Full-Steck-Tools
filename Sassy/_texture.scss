/*
  Textures Created With https://fffuel.co/nnnoise/
*/
// Mixins
  @function makeTextureSVG($backgroundColor:hsl(0, 0%, 19%), $particleColor:hsl(23, 0%, 81%)){
    $ret: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' version='1.1' xmlns:xlink='http://www.w3.org/1999/xlink' xmlns:svgjs='http://svgjs.dev/svgjs' viewBox='0 0 700 700' width='700' height='700' opacity='1'%3E%3Cdefs%3E%3Cfilter id='nnnoise-filter' x='-20%25' y='-20%25' width='140%25' height='140%25' filterUnits='objectBoundingBox' primitiveUnits='userSpaceOnUse' color-interpolation-filters='linearRGB'%3E%3CfeTurbulence type='turbulence' baseFrequency='0.05' numOctaves='4' seed='15' stitchTiles='stitch' x='0%25' y='0%25' width='100%25' height='100%25' result='turbulence'%3E%3C/feTurbulence%3E%3CfeSpecularLighting surfaceScale='35' specularConstant='0.5' specularExponent='20' lighting-color='"+$particleColor+"' x='0%25' y='0%25' width='100%25' height='100%25' in='turbulence' result='specularLighting'%3E%3CfeDistantLight azimuth='3' elevation='163'%3E%3C/feDistantLight%3E%3C/feSpecularLighting%3E%3C/filter%3E%3C/defs%3E%3Crect width='700' height='700' fill='"+$backgroundColor+"'%3E%3C/rect%3E%3Crect width='700' height='700' fill='"+$particleColor+"' filter='url(%23nnnoise-filter)'%3E%3C/rect%3E%3C/svg%3E");

    @return $ret;
  }

  @mixin auto-texture-class-generator($key, $value){
    // Normal & Description
      .texture-#{$key}{ 

        @if(varIs($value, 'map') and ( map-has-key($value, 'light') and map-has-key($value, 'dark') )){ 
          $valueLight : map-get($value, 'light');
          $valueDark  : map-get($value, 'dark');
          
          @include light-theme{ background-image: makeTextureSVG($valueLight) !important; }
          @include dark-theme { background-image: makeTextureSVG($valueDark) !important;  }
        }
        @else{
          background-image: makeTextureSVG($value) !important; 
        }
      }
    // Normal & Description

    // Hover Effects
      .btn.texture-#{$key}{
        @if(varIs($value, 'map') and ( map-has-key($value, 'light') and map-has-key($value, 'dark') )){ 
          $valueLight : map-get($value, 'light');
          $valueDark  : map-get($value, 'dark');
          
          @include light-theme{
            background-image: makeTextureSVG($valueLight) !important;
            transition: 350ms;
            &:hover{
              background-image: makeTextureSVG(transparent, $valueLight) !important; 
            }
          }
          @include dark-theme{
            background-image: makeTextureSVG($valueDark) !important;
            transition: 350ms;
            &:hover{
              background-image: makeTextureSVG(transparent, $valueDark) !important; 
            }
          }
        }
        @else{
          background-image: makeTextureSVG($value) !important;
          transition: 350ms;
          &:hover{
            background-image: makeTextureSVG(transparent, $value) !important; 
          }
        }
      }
    // Hover Effects
          
  }
// Mixins
  
// Classes
  .texture{ 
    @include light-theme{ background-image: makeTextureSVG($light-primary) !important; }
    @include dark-theme { background-image: makeTextureSVG($dark-primary) !important; }
  }
  .texture-transparent{ 
    @include light-theme{ background-image: makeTextureSVG(transparent, $light-primary) !important; }
    @include dark-theme { background-image: makeTextureSVG(transparent, $dark-primary) !important; }
  }
  
  @each $key, $value in $auto-class-generator-merge{ @include auto-texture-class-generator($key, $value); }
// Classes